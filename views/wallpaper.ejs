 <%- include('./partials/header.ejs') %>
  <div class="right-bar">
    <h2 class="custom-heading custom-card">Wallpapers Category</h2>
    <div class="custom-card">
      <div class="user-profile-deatils files_upload_table">
        <div class="user-profile-deatils-inner">
          <div class="section-header">
            <a href="/wallpaper-category-add" class="add_import"><i class="fi fi-rs-plus"></i></a>
          </div>
          <div class="tab-content" id="myTabContent">
            <div class="tab-pane fade show active" id="home-tab-pane" role="tabpanel" aria-labelledby="home-tab"
              tabindex="0">
              <div class="table-responsive">
                <table class="table table-striped" id="wallpaper-category"></table>
                <div id="loader" class="loader-overlay loader-main">
                  <div class="loader">
                    <div></div>
                    <div></div>
                    <div></div>
                    <div></div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <nav class="paginaton-section">
      <ul class="pagination" id="pagination"></ul>
    </nav>
  </div>
  </div>

  <%- include('./partials/footer.ejs') %>

    <!-- Delete Modal -->
    <div class="modal fade delete-modal" id="deleteModel" tabindex="-1" aria-labelledby="exampleModalLabel"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="delete-content">
            <img src="images/remove.png" alt="delete img" class="delete-img" />
            <h3>Are you sure?</h3>
            <p>
              Do you want really want do delete this Wallpaper <br />
              this file cannot be find
            </p>
            <div class="delete-content-btn">
              <button type="button" class="btn btn-danger" id="confirmDeleteFile" onClick="">
                Delete
              </button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                Close
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="/script/filemanager.js"></script>

    <script>
      $(document).ready(() => getDataTable(1));

      $("#inputfile").change(async (e) => {
        const files = e.target.files;
        if (files.length > 0) {
          $("#savefile").prop("disabled", false);
        } else {
          $("#savefile").prop("disabled", true);
        }
        const uploadPromise = [];
        for (let i = 0; i < files.length; i++) {
          const file = files[i];
          uploadPromise.push(uploadFile(file, "wallpaper"));
        }
        await Promise.all(uploadPromise);
        changevisible();
      });

      function removefile(media, eleId) {
        $(`#${eleId}`).remove();
        changevisible();
        updateFileStatus(media, false, null);
      }

      function saveFile() {
        const content = `<li>
      <div
        class="alert alert-warning text-center"
        role="alert"
        style="margin: 15px"
      >
        Please select file to upload.
      </div>
    </li>`;
        $("#uploadimages").html(content);
        $("#inputfile").val("");
        $("#savefile").prop("disabled", true);
        getDataTable();
      }

      function getDataTable(pageno) {
        $(".loader-main").css("display", "flex")
        return new Promise((res, rej) => {
          $.ajax({
            type: "GET",
            url: `/get-wallpaper-category`,
            success: (response) => {
              handleWallpaperList(response);
              res();
              $(".loader-main").css("display", "none")
            },
            error: (error) => {
              rej();
              $(".loader-main").css("display", "none")
            },
          });
        });
      }

      async function handleWallpaperList(response) {
        if (response.success) {
          const tableContent = getTableContent(response.data);
          $("#wallpaper-category").html(tableContent);
        }
      }

      function getTableContent(categories) {
        if (!categories.length) {
          const content = `<div class="alert alert-warning text-center" role="alert" style="margin:15px;">
        No wallpaper found.
        </div>`;
          return content;
        }
        let tableContent = `<thead>
    <tr>
      <th>Sr.</th>
      <th>Title</th>
      <th>Color</th>
      <th>Photo</th>
      <th>Action</th>
    </tr>
  </thead>
  <tbody>`;
        for (let category = 0; category < categories.length; category++) {
          const data = categories[category];
          const content = `<tr id=table_${data._id}>
         <td>${category + 1}</td> 
         <td>${data.name}</td>
         <td>
          <span>
          ${data.color}
          </span>
          </td>
         <td> 
            <img src= ${data.url} alt="img_user" class="tabel-user-img">
         </td>
         <td> 
            <div class="action-button"> 
                <a href="/wallpaper-category-edit?id=${data._id
            }" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit"><i class="fi fi-rs-pencil"></i></a>

                <a href="/wallpaper-category-manage?id=${data._id
            }" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit"><i class="fi fi-rs-plus"></i></a>

                <a href="javascript:void(0)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Delete">
                    <i class="fi fi-rs-trash" onClick="deleteButton(this.id, '${data.name
            }')" id="${data._id}"></i>
                </a>
            </div> 
         </td> 
        </tr>`;
          tableContent += content;
        }
        tableContent += `</tbody>`;
        return tableContent;
      }
      function checkboxclick() {
        const selected = $("input[name=gridFileSelected]:checked");
        if (selected.length > 0) {
          $("#deleteMultiFileButton").prop("disabled", false);
        } else {
          $("#deleteMultiFileButton").prop("disabled", true);
        }
      }

      function deleteButton(id) {
        $("#confirmDeleteFile").attr("onClick", `deleteFile('${id}')`);
        $("#deleteModel").modal("show");
      }

      async function deleteFile(id) {
        $("#deleteModel").modal("hide");
        const response = await deletefiles(id);
        if (response.success) {
          toastNotification("success", "Wallpaper Deleted Successfully");
          getDataTable();
        } else {
          toastNotification("danger", error.responseJSON.message);
        }
      }

      function deletefiles(id) {
        return new Promise((res, rej) => {
          $.ajax({
            url: "/delete-wallpaper-category",
            method: "POST",
            data: {
              id: id,
            },
            success: (response) => {
              res(response);
            },
            error: (error) => {
              rej(error);
            },
          });
        });
      }

      function deleteMultiFileButton() {
        const selected = $("input[name=fileSelected]:checked");
        const list = [];
        for (let i = 0; i < selected.length; i++) {
          list.push(selected[i].id);
        }
        $("#confirmDeleteFile").attr(
          "onClick",
          `deleteMultiFile(${JSON.stringify(list)})`
        );
        $("#deleteModel").modal("show");
      }

      function deleteMultiGridFileButton() {
        const selected = $("input[name=gridFileSelected]:checked");
        const list = [];
        for (let i = 0; i < selected.length; i++) {
          list.push(selected[i].id);
        }
        $("#confirmDeleteFile").attr(
          "onClick",
          `deleteMultiFile(${JSON.stringify(list)})`
        );
        $("#deleteModel").modal("show");
      }

      async function deleteMultiFile(list) {
        $("#deleteModel").modal("hide");
        for (let file = 0; file < list.length; file++) {
          await deletefiles(list[file], false, null);
        }
        toastNotification("success", "Wallpaper Deleted Successfully");
        getDataTable();
        const element = $("#selectall").is(":checked");
        if (element) $("#selectall").prop("checked", false);
        checkboxclick();
      }

      function selectAll() {
        const element = $("#selectall").is(":checked");
        if (element) {
          const markCheked = $("input[name=fileSelected]");
          for (let i = 0; i < markCheked.length; i++) {
            $(markCheked[i]).prop("checked", true);
          }
        } else {
          const markCheked = $("input[name=fileSelected]");
          for (let i = 0; i < markCheked.length; i++) {
            $(markCheked[i]).prop("checked", false);
          }
        }
        checkboxclick();
      }

      function copytoclipboard(text) {
        navigator.clipboard.writeText(text);
        toastNotification("success", "Link Copied");
      }
    </script>