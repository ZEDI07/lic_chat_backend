 <%- include('./partials/header.ejs') %>
  <script src="/script/dateConverter.js"></script>
  <div class="right-bar">
    <h2 class="custom-heading custom-card">Message</h2>
    <div class="custom-card">
      <div class="user-profile-deatils">
        <ul class="nav nav-pills" id="pills-tab" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="recent" data-bs-toggle="pill" data-bs-target="#pills-home" type="button"
              role="tab" aria-selected="true" onclick="recentMessage()">
              Recent
            </button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="history" data-bs-toggle="pill" data-bs-target="#pills-profile" type="button"
              role="tab" aria-selected="false" tabindex="-1" onclick="historyMessage()">
              History
            </button>
          </li>
        </ul>
        <div class="tab-content user-profile-deatils-inner" id="pills-tabContent">
          <div class="tab-pane fade show active" id="pills-home" role="tabpanel" aria-labelledby="#recent">
            <div class="section-header">
              <div class="form-check">
                <label class="switch">
                  <!-- <input type="checkbox" id="isLive" checked> -->
                  <input type="checkbox" id="isLive" name="isLive" onchange="Changed()" />
                  <span class="slider"></span>
                </label>
                <label class="form-check-label"> Auto Refresh </label>
              </div>
            </div>
            <div class="table-responsive">
              <table class="table table-striped" id="live-table"></table>
              <div class="loader" id="loader">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
              </div>
            </div>
          </div>
          <div class="tab-pane fade" id="pills-profile" role="tabpanel" aria-labelledby="#history">
            <div class="section-header">
              <div class="custom-form-section section-header-form">
                <input type="text" id="sender" class="form-control" placeholder="Sender" oninput="search()" />
                <input type="text" id="receiver" class="form-control autocomplete" name="receiver"
                  placeholder="Receiver" oninput="search()" />
              </div>
            </div>

            <div class="table-responsive">
              <table class="table table-striped" id="history-table"></table>
              <div class="loader" id="loader1">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <%- include('./partials/footer.ejs') %>
    <!-- Delete Modal -->
    <div class="modal fade delete-modal" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="delete-content">
            <img src="images/remove.png" alt="delete img" class="delete-img" />
            <h3>Are you sure?</h3>
            <p id="deleteConfirmationMessage">
              Do you want really want do delete this data <br />
              this file cannot be find
            </p>
            <div class="delete-content-btn">
              <button type="button" id="confirmDeleteMessage" onclick="" class="btn btn-danger">
                Delete
              </button>
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                Close
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- View Message Modal -->
    <div class="modal fade delete-modal" id="viewMessageModal" tabindex="-1" aria-labelledby="viewMessageModalLabel"
      aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="delete-content">
            <p id="viewMessageText"></p>
          </div>
        </div>
      </div>
    </div>

    <!-- Script for handling ajax to get chat -->

    <!-- <script src="/socket.io/socket.io.js"></script>  -->
    <script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>

    <script>
      let socket;
      let recentLastMessage;
      let historyLastMessage;
      let ended = false;
      let tab = 0;
      let timer = 0;

      $(document).ready(() => {
        // alert($('#isLive').is(":checked"))
        getDataTable(0);
      });

      const token = `<%= token %>`;

      function search() {
        clearTimeout(timer);
        timer = setTimeout(() => {
          ended = false;
          const sender = $("#sender").val();
          const receiver = $("#receiver").val();
          let url = `/message-list?`;
          sender && (url = url.concat(`sender=${sender}&`));
          receiver && (url = url.concat(`receiver=${receiver}`));
          $.ajax({
            type: "GET",
            url: url,
            success: (response) => {
              handleMessageList(response.data);
            },
            error: (error) => {
              console.log(error);
            },
          });
        }, 1000);
      }

      function Changed(e) {
        const value = $("input[name='isLive']:checked").val();
        if (value) {
          socket = io({
            transports: ["websocket"],
            query: {
              token: token,
            },
          });
          socket.on("new_message_admin", (message) => {
            const tablerow = tableRowContent(message);
            $("#live-table tbody").prepend(tablerow);
          });
        } else {
          socket.disconnect();
          console.log("socket config", socket);
        }
      }

      // TO Get list of messages.
      function getDataTable(pageno) {
        $(".loader").css("display", "block")
        return new Promise((res, rej) => {
          // page = +pageno || page;
          $.ajax({
            type: "GET",
            url: `/message-list?limit=25`,
            success: (response) => {
              handleMessageList(response.data);
              res();
              $(".loader").css("display", "none")
            },
            error: (error) => {
              rej();
              $(".loader").css("display", "none")
            },
          });
        });
      }

      // // handling message list and pagination accroring to count
      async function handleMessageList(data) {
        const nocontent = `
                <div class="alert alert-warning text-center" role="alert" style="margin:15px;">
                    No message found.
                </div>`;
        if (tab == 0) {
          if (data.length) {
            recentLastMessage = data[data.length - 1]._id;
            $("#live-table").html(getTableContent(data));
          } else {
            $("#live-table").html(nocontent);
          }
        } else if (tab == 1) {
          if (data.length) {
            historyLastMessage = data[data.length - 1]._id;
            $("#history-table").html(getTableContent(data));
          } else {
            $("#history-table").html(nocontent);
          }
        }
      }

      function getTableContent(messages) {
        let tableContent = `<thead>
                                <tr>
                                    <th>Chat</th>
                                    <th>Type</th>
                                    <th>Sender</th>
                                    <th>Receiver</th>
                                    <th>Date</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>`;
        for (let data of messages) {
          const content = tableRowContent(data);
          tableContent += content;
        }
        tableContent += `</tbody>`;
        return tableContent;
      }

      const tableRowContent = (data) => `
                <tr id=${tab == 0 ? `message_${data._id}` : `hmessage_${data._id}`}>
                <td>
                    ${(() => {
          switch (data.contentType) {
            case "text":
              if (data.text.length > 7) {
                return `<div class="action-button"><a href="javascript:void(0)" data-bs-toggle="modal" class="delete-btn" data-bs-target="#viewMessageModal" onClick="showMessageButton(this.id, '${data.text}')">
                                ${data.text.substr(0, 7)}...
                                <span class="tooltiptext">View Message</span>
                            </a>
                        </div>`;
              } else {
                return `<div class="action-button"> <a href="javascript:void(0)" data-bs-toggle="modal" data-bs-target="#viewMessageModal" class="delete-btn" onClick="showMessageButton(this.id, '${data.text}')">
                                ${data.text.substr(0, 7)}
                                <span class="tooltiptext">View Message</span>
                            </a>
                        </div>`;
              }
            case "image":
              return `<a href=${data.media} target="_blank"> <i class="fi fi-rs-images" aria-hidden="true"></i> Image </a>`;
            case "audio":
              return `<a href=${data.media} target="_blank"> <i class="fi fi-rs-music" aria-hidden="true"></i> Audio </a>`;
            case "video":
              return `<a href=${data.media} target="_blank"> <i class="fi fi-rs-video-camera" aria-hidden="true"></i> Video </a>`;
            case "sticker":
              return `<a href=${data.media} target="_blank"> <i class="fi fi-rs-images" aria-hidden="true"></i> Image </a>`;
            case "application":
              return `<a href=${data.media} target="_blank"> <i class="fi fi-rs-file" aria-hidden="true"></i> Document </a>`;
            case "notification":
              return `<a> ${data.action} </a>`;
            case "location":
              return `<a> ${data.location.locationType} </a>`;
            default:
              return "Media type not added";
          }
        })()}</td>
        <td> ${data.contentType}</td>
        <td><img src="${data.sender.avatar}" alt="img" class="tabel-user-img">
          <a href="/user-profile?id=${data.sender._id}#general"> 
              <span>${data.sender.name}</span>
          </a>
        </td>
        <td><img src="${data.receiver.avatar}" alt="img" class="tabel-user-img"><a href=${data.receiverType === "user" ? `/user-profile?id=${data.receiver._id}` : `/group-profile?id=${data.receiver._id}`} data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Edit">
            <span>${data.receiver.name}</span></a>
        </td>
        <td> ${dateConverter(data.createdAt)} </td>
            <td>${data.contentType !== "notification" ? `
              <div class="action-button">
                  <a href="javascript:void(0)" data-bs-toggle="modal"
                      data-bs-target="#exampleModal" class="delete-btn"
                  >
                      <i class="fi fi-rs-trash" onClick="deleteButton(this.id, '${data.name}')" id="${data._id}"></i>
                      <span class="tooltiptext">Delete</span>
                  </a>
              </div>`
          : ""
        }
        </td>
        </tr>`;

      function deleteMessage(messageId) {
        $("#exampleModal").modal("hide");
        return new Promise((res, rej) => {
          $.ajax({
            type: "DELETE",
            url: `/${messageId}`,
            success: (response) => {
              console.log("message id ", messageId);
              const id =
                tab == 0 ? `#message_${messageId}` : `#hmessage_${messageId}`;
              console.log("ID", id);
              $(id).remove();
              res();
            },
            error: (error) => {
              rej();
            },
          });
        });
      }

      addEventListener("scrollend", (e) => {
        if (
          $(document).height() == $(window).scrollTop() + $(window).height() &&
          !ended
        ) {
          fetchMessages();
        }
      });

      function fetchMessages() {
        if (!recentLastMessage && !historyLastMessage) return;
        $(".loader").css("display", "block")
        let url = `/message-list?lastmessage=${tab == 0 ? recentLastMessage : historyLastMessage}`;
        if (tab == 1) {
          const sender = $("#sender").val();
          const receiver = $("#receiver").val();
          sender && url.concat(`&sender=${sender}`);
          receiver && receiver.concat(`&receiver=${receiver}`);
        }
        $.ajax({
          type: "GET",
          url: url,
          success: (response) => {
            if (!response.data.length) {
              const content = `<div class="alert alert-warning text-center" role="alert" style="margin:15px;">
                                    message ended.
                                </div>`;
              const tableId =
                tab == 0 ? "#live-table tbody" : "#history-table tbody";
              $(tableId).append(content);
              ended = true;
              $(".loader").css("display", "none")
              return;
            }
            let tableContent = "";
            for (let data of response.data) {
              const content = tableRowContent(data);
              tableContent += content;
            }
            if (tab == 0) {
              recentLastMessage = response.data[response.data.length - 1]._id;
              $("#live-table tbody").append(tableContent);
            } else if (tab == 1) {
              historyLastMessage = response.data[response.data.length - 1]._id;
              $("#history-table tbody").append(tableContent);
            }
            $(".loader").css("display", "none")
          },
          error: (error) => {
            console.log(error);
            $(".loader").css("display", "none")
          },
        });
      }

      function showMessageButton(id, message) {
        $("#viewMessageText").html(message);
      }

      function deleteButton(id, name) {
        $("#deleteConfirmationMessage").html(
          `Do you want really want do delete this message`
        );
        $("#confirmDeleteMessage").attr("onClick", `deleteMessage('${id}')`);
        $("#exampleModal").modal("show");
      }

      function recentMessage() {
        window.location.hash = "recent";
        tab = 0;
        getDataTable();
        ended = false;
      }

      function historyMessage() {
        window.location.hash = "history";
        tab = 1;
        getDataTable();
        ended = false;
      }
    </script>