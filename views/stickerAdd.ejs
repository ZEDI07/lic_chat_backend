 <%- include('./partials/header.ejs') %>
<script src="/script/dateConverter.js"></script>
<div class="right-bar">
  <h2 class="custom-heading custom-card">Add Stickers</h2>
  <div class="custom-card">
    <div class="upload-list-section">
      <div class="upload-main-section">
        <% if(id){%>
        <input type="hidden" name="id" value="<%=id%>" />
        <%}%>
        <div class="upload-files-section">
          <input
            type="file"
            id="inputfile"
            name="sticker"
            accept="image/*"
            multiple
          />
          <div class="upload-files-icon">
            <i class="fi fi-rs-cloud-upload"></i>
          </div>
          <p><b> Click to Upload </b></p>
        </div>
        <button
          class="btn btn-primary"
          id="savefile"
          onclick="saveFile()"
          disabled
        >
          Save
        </button>
      </div>
      <ul class="upload-files-progress" id="uploadimages">
        <li id="uploadimages_default">
          <div
            class="alert alert-warning text-center"
            role="alert"
            style="margin: 15px"
          >
            Please select file to upload.
          </div>
        </li>
      </ul>
    </div>
  </div>

  <%- include('./partials/footer.ejs') %>

  <!-- Delete Modal -->
  <div
    class="modal fade delete-modal"
    id="deleteModel"
    tabindex="-1"
    aria-labelledby="exampleModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content">
        <div class="delete-content">
          <img src="images/remove.png" alt="delete img" class="delete-img" />
          <h3>Are you sure?</h3>
          <p>
            Do you want really want do delete this data <br />
            this file cannot be find
          </p>
          <div class="delete-content-btn">
            <button
              type="button"
              class="btn btn-danger"
              id="confirmDeleteFile"
              onClick=""
            >
              Delete
            </button>
            <button
              type="button"
              class="btn btn-secondary"
              data-bs-dismiss="modal"
            >
              Close
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script src="/script/filemanager.js"></script>

<script>

  async function saveFile() {
    if (files && files.length) {
      $("#savefile").prop("disabled", true);
      const pack = $('input[name="id"]').val();
      const promise = [];
      for (let sticker of files) {
        promise.push(
          new Promise(async (res, rej) => {
            const response = await uploadFile(sticker, "sticker", sticker.id);
            if (!response.success) {
              toastNotification("danger", "Error while uploading Image");
              return;
            }
            const data = {
              // category,
              pack,
              media: response.data._id,
            };
            $.ajax({
              url: "/add-sticker",
              method: "POST",
              data: data,
              success: (response) => {
                res(response);
              },
              error: (error) => {
                rej(error);
              },
            });
          })
        );
      }
      $(".removefile").hide();
      await Promise.all(promise);
      $("#inputfile").val("");
      toastNotification("success", "Added Successfully");
      timeoutRedirect(`/sticker-pack-manage?id=${pack}`);
    }
  }

  let page = 1;
  const pageSize = 10;

  function search() {
    return new Promise((res, rej) => {
      const value = $("#searchInput").val();
      const selectedType = $("#selectType").val();
      const selectedDate = $("#selectDate").val();
      const key = "originalname";
      let requestUrl = `/get-file-list?page=${page - 1}&limit=${pageSize}`;
      if (value) {
        requestUrl += `&key=${key}&value=${value}`;
      }
      if (selectedType != 0) {
        requestUrl += `&type=${selectedType}`;
      }
      // if (selectedDate != 0) {
      //   requestUrl += `&selectedDate=${selectedDate}`;
      // }
      $.ajax({
        type: "GET",
        url: requestUrl,
        success: (response) => {
          handleFileList(response), res();
        },
        error: (error) => {
          rej();
        },
      });
    });
  }

  function getDataTable(pageno) {
    return new Promise((res, rej) => {
      page = +pageno || page;
      $.ajax({
        type: "GET",
        url: `/get-file-list?page=${page - 1}&limit=${pageSize}`,
        success: (response) => {
          handleFileList(response);
          res();
        },
        error: (error) => {
          rej();
        },
      });
    });
  }

  async function handleFileList(response) {
    if (response.success) {
      if (page > 1 && response.data.count && !response.data.files.length) {
        page--;
        await getDataTable(page);
        return;
      }
      const paginationContent = getPaginationContent(
        response.data.count,
        pageSize,
        page
      );
      const tableContent = getFileTableContent(
        response.data.files,
        page,
        pageSize
      );
      const gridContent = getFileTableGridContent(response.data.files);
      $("#fileTable").html(tableContent);
      $("#pagination").html(paginationContent);
      $("#tableGridView").html(gridContent);
      // const element = $("#selectall").is(":checked");
      // console.log("element", element);
      // if (element) {
      //   $("#selectall").removeAttr("checked");
      // }
      // if (response.data.count <= 1) {
      //   $("#NextButtonList").addClass("disabled");
      // }
    }
  }

  function getFileTableGridContent(files) {
    if (!files.length) {
      const content = `<li><div class="alert alert-warning text-center" role="alert" style="margin:15px;">
          No Files found.
          </div></li>`;
      return content;
    }
    let content = "";
    for (let file = 0; file < files.length; file++) {
      const data = files[file];
      content += `<li>
                  <div class="files-upload-grid-inner">
                    <div class="files-upload-grid-inner-top">
                      <p>
                        <input
                          class="form-check-input"
                          type="checkbox"
                          name="gridFileSelected"
                          id="${data._id}"
                        />
                      </p>
                      <div class="files-upload-grid-inner-right dropstart">
                        <a
                          href="javascript:void(0)"
                          type="button"
                          data-bs-toggle="dropdown"
                          aria-expanded="false"
                        >
                          <i class="fi fi-rs-menu-dots-vertical"></i>
                        </a>
                        <ul class="dropdown-menu">
                          <li>
                            <a
                              class="dropdown-item"
                              href="${data.url}"
                              >Preview</a
                            >
                          </li>
                          <li>
                            <a class="dropdown-item" href="javascript:void(0)"
                              >Download</a
                            >
                          </li>
                          <li>
                            <a class="dropdown-item" href="javascript:void(0)"
                              >Copy</a
                            >
                          </li>
                          <li>
                            <a
                              class="dropdown-item"
                              href="javascript:void(0)"
                              data-bs-toggle="modal"
                              data-bs-target="#exampleModal"
                              class="delete-btn"
                              >Delete</a
                            >
                          </li>
                        </ul>
                      </div>
                    </div>
                    <div class="files-upload-grid-inner-mid">
                      <img
                        src="${data.url}"
                        alt="img"
                      />
                    </div>
                    <div class="files-upload-grid-inner-title">
                      <p>${data.originalname}</p>
                    </div>
                  </div>
                </li>`;
    }
    return content;
  }

  // Group Page Function >>>>>>
  function getFileTableContent(files, pageno, pageSize) {
    if (!files.length) {
      const content = `<div class="alert alert-warning text-center" role="alert" style="margin:15px;">
          No Files found.
          </div>`;
      return content;
    }
    let tableContent = `<thead>
                    <tr>
                      <th>
                        <input
                          class="form-check-input"
                          type="checkbox"
                          name="selectall"
                          onchange="selectAll()"
                          id="selectall"
                        />
                        <label class="form-check-label" for="flexCheckDefault"
                          >File Name</label
                        >
                      </th>
                      <th class="text-center">File Size</th>
                      <th>Date Added</th>
                      <th>Action</th>
                    </tr>
                  </thead>
                  <tbody>`;
    for (let file = 0; file < files.length; file++) {
      const data = files[file];
      const content = `<tr>
                      <td>
                        <div class="upload-table-file">
                          <input
                            class="form-check-input"
                            type="checkbox"
                            onclick="checkboxclick()"
                            name="fileSelected"
                            id="${data._id}"
                          />
                          <img
                            src="${data.url}"
                            alt="img upload"
                            class="files_upload_table_img"
                          />
                          <label class="form-check-label" for="flexCheckDefault"
                            >${data.originalname}</label
                          >
                        </div>
                      </td>
                      <td class="text-center">${(data.size / 1024).toFixed(
                        2
                      )} kb</td>
                      <td>${dateConverter(data.createdAt)}</td>
                      <td>
                        <div class="action-button">
                          <a
                          href="${data.url}"
                          target="_blank"
                          class="delete-btn"
                          >
                            <i class="fi fi-rs-eye"></i>
                            <span class="tooltiptext">View</span>
                          </a>
                          <a
                            href="${data.url}"
                            class="delete-btn"
                          >
                            <i class="fi fi-rs-download"></i>
                            <span class="tooltiptext">Download</span>
                          </a>
                          <a class="delete-btn" onClick="copytoclipboard('${
                            data.url
                          }')">
                            <i class="fi fi-rs-copy-alt"></i>
                            <span class="tooltiptext">Copy</span>
                          </a>
                          <a
                            class="delete-btn"
                            onclick="deleteButton('${data._id}')"
                          >
                            <i class="fi fi-rs-trash"></i>
                            <span class="tooltiptext">Delete</span>
                          </a>
                        </div>
                      </td>
                    </tr>`;
      tableContent += content;
    }
    tableContent += `</tbody>`;
    return tableContent;
  }

  function checkboxclick() {
    const selected = $("input[name=fileSelected]:checked");
    if (selected.length > 0) {
      $("#deleteMultiFileButton").prop("disabled", false);
    } else {
      $("#deleteMultiFileButton").prop("disabled", true);
    }
  }

  function deleteButton(id) {
    $("#confirmDeleteFile").attr("onClick", `deleteFile('${id}')`);
    $("#deleteModel").modal("show");
  }

  function deleteFile(id) {
    $("#deleteModel").modal("hide");
    updateFileStatus(id, false, getDataTable);
  }

  function deleteMultiFileButton() {
    const selected = $("input[name=fileSelected]:checked");
    const list = [];
    for (let i = 0; i < selected.length; i++) {
      list.push(selected[i].id);
    }
    $("#confirmDeleteFile").attr(
      "onClick",
      `deleteMultiFile(${JSON.stringify(list)})`
    );
    $("#deleteModel").modal("show");
  }

  function deleteMultiGridFileButton() {
    const selected = $("input[name=gridFileSelected]:checked");
    const list = [];
    for (let i = 0; i < selected.length; i++) {
      list.push(selected[i].id);
    }
    $("#confirmDeleteFile").attr(
      "onClick",
      `deleteMultiFile(${JSON.stringify(list)})`
    );
    $("#deleteModel").modal("show");
  }

  async function deleteMultiFile(list) {
    $("#deleteModel").modal("hide");
    for (let file = 0; file < list.length; file++) {
      await updateFileStatus(list[file], false, null);
    }
    getDataTable();
    const element = $("#selectall").is(":checked");
    if (element) $("#selectall").prop("checked", false);
    checkboxclick();
  }

  function selectAll() {
    const element = $("#selectall").is(":checked");
    if (element) {
      const markCheked = $("input[name=fileSelected]");
      for (let i = 0; i < markCheked.length; i++) {
        $(markCheked[i]).prop("checked", true);
      }
    } else {
      const markCheked = $("input[name=fileSelected]");
      for (let i = 0; i < markCheked.length; i++) {
        $(markCheked[i]).prop("checked", false);
      }
    }
    checkboxclick();
  }

  function copytoclipboard(text) {
    navigator.clipboard.writeText(text);
  }

  // $(function () {
  //   $('input[name="daterange"]').daterangepicker(
  //     {
  //       opens: "left",
  //     }
  //     // function (start, end, label) {
  //     //   console.log(
  //     //     "A new date selection was made: " +
  //     //       start.format("YYYY-MM-DD") +
  //     //       " to " +
  //     //       end.format("YYYY-MM-DD")
  //     //   );
  //     // }
  //   );
  // });
</script>
